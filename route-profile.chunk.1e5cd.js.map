{"version":3,"sources":["webpack:///../src/index.js","webpack:///./routes/profile/style.css","webpack:///./routes/profile/index.js"],"names":["getHookState","index","type","options","__h","currentComponent","currentHook","hooks","__","length","push","__V","EMPTY","useState","initialState","reducer","init","hookState","currentIndex","_reducer","__c","invokeOrReturn","currentValue","__N","nextValue","action","setState","_hasScuFromHooks","prevScu","shouldComponentUpdate","p","s","c","__H","stateHooks","filter","x","every","call","this","shouldUpdate","forEach","hookItem","useReducer","flushAfterPaintEffects","component","afterPaintEffects","shift","__P","invokeCleanup","invokeEffect","e","__e","__v","afterNextFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","requestAnimationFrame","hook","comp","cleanup","argsChanged","oldArgs","newArgs","some","arg","f","previousComponent","prevRaf","oldBeforeDiff","oldBeforeRender","__r","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","__b","vnode","_mask","Fragment","indexOf","_pendingArgs","commitQueue","cb","hasErrored","Profile","args","state","Date","now","time","setTime","count","setCount","timer","setInterval","clearInterval","class","style","toLocaleString","onClick"],"mappings":"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","file":"route-profile.chunk.1e5cd.js","sourcesContent":["import { Fragment, options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tif (\n\t\ttypeof vnode.type === 'function' &&\n\t\t!vnode._mask &&\n\t\tvnode.type !== Fragment\n\t) {\n\t\tvnode._mask =\n\t\t\t(vnode._parent && vnode._parent._mask ? vnode._parent._mask : '') +\n\t\t\t(vnode._parent && vnode._parent._children\n\t\t\t\t? vnode._parent._children.indexOf(vnode)\n\t\t\t\t: 0);\n\t} else if (!vnode._mask) {\n\t\tvnode._mask =\n\t\t\tvnode._parent && vnode._parent._mask ? vnode._parent._mask : '';\n\t}\n\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nfunction hash(s) {\n\tlet h = 0,\n\t\ti = s.length;\n\twhile (i > 0) {\n\t\th = ((h << 5) - h + s.charCodeAt(--i)) | 0;\n\t}\n\treturn h;\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\tstate._value = 'P' + hash(currentComponent._vnode._mask) + currentIndex;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile__hKgU4\"};","import { h } from 'preact';\nimport {useEffect, useState} from \"preact/hooks\";\nimport style from './style.css';\n\n// Note: `user` comes from the URL, courtesy of our router\nconst Profile = ({ user }) => {\n\tconst [time, setTime] = useState(Date.now());\n\tconst [count, setCount] = useState(10);\n\n\tuseEffect(() => {\n\t\tlet timer = setInterval(() => setTime(Date.now()), 1000);\n\t\treturn () => clearInterval(timer);\n\t}, []);\n\n\treturn (\n\t\t<div class={style.profile}>\n\t\t\t<h1>Profile: NALLASIVAN GOVINDASAMY</h1>\n\t\t\t<p>Nallasivan G's official profile website - developed by NallasivanG</p>\n\n\t\t\t<div>Current time: {new Date(time).toLocaleString()}</div>\n\n\t\t\t<p>\n\t\t\t\t<button onClick={() => setCount((count) => count + 1)}>Click Me</button>\n\t\t\t\t{' '}\n\t\t\t\tClicked {count} times.\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n"],"sourceRoot":""}